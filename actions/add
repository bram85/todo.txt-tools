#!/usr/bin/env perl

# TodoTxt Tools
# Copyright (C) 2013 Bram Schoenmakers <me@bramschoenmakers.nl>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use Time::Piece;

use lib 'lib';
use TodoTxt;

my $text = $ARGV[ 1 ];

#################################
# Add creation date, if missing #
#################################

$text =~ /^(\([A-Z]\) )?(\d{4}-\d{2}-\d{2} )?(.*)$/;
my ( $priority, $creation, $remainder ) = ( $1, $2, $3 );

unless ( defined( $creation ) ) {
  my $now = localtime();
  my $date = $now->ymd;

  $text = sprintf( "%s%s %s", $priority, $date, $remainder );
}

################################################
# Substitute relative dates with absolute ones #
################################################

my $todo = TodoTxt::parseLine( $text );

sub replaceTag {
  my $tag = $_[ 0 ];

  my $value = TodoTxt::getTagValue( $todo, $tag );

  if ( $value && !TodoTxt::isDate( $value ) ) {
    unless ( TodoTxt::isRelativeDatePattern( $value ) ) {
      print STDERR "Warning: $value is not a valid date.\n";
      $value = "today";
    }

    TodoTxt::setTagValue( $todo, $tag, TodoTxt::convertRelativeDateString( $value ) );
  }
}

replaceTag( 't' );
replaceTag( 'due' );

###########
# Execute #
###########

my $command = sprintf( "%s command add '%s'", $ENV{ 'TODO_FULL_SH' }, $todo->{ 'src' } );
print `$command`;
